{"version":3,"sources":["static/not_hack_the_north.png","static/profile_background.png","components/Background/index.tsx","components/LoginForm/component.tsx","components/LoginForm/index.ts","redux/modules/Login/actions.ts","redux/modules/Login/types.ts","components/LoginCard/index.tsx","components/ProfileActionDetails/index.tsx","components/ProfileDetails/component.tsx","redux/modules/Profile/actions.ts","redux/modules/Profile/types.ts","components/ProfileDetails/index.ts","components/ProfileCard/index.tsx","components/NotFoundPage/index.tsx","components/App/component.tsx","components/App/index.ts","serviceWorker.ts","redux/reducers/index.ts","redux/modules/Login/reducers.ts","redux/modules/Profile/reducers.ts","redux/modules/ErrorAlert/sagas.ts","redux/modules/ErrorAlert/types.ts","redux/modules/ErrorAlert/actions.ts","redux/modules/Login/sagas.ts","redux/modules/Profile/services.ts","redux/modules/Profile/sagas.ts","redux/sagas/index.ts","redux/store/index.ts","index.tsx"],"names":["module","exports","BackgroundContainer","styled","div","CardContainer","Background","children","FormContainer","form","Label","label","Input","input","Button","button","React","memo","loginAction","useState","email","setEmail","password","setPassword","history","useHistory","onSubmit","event","preventDefault","htmlFor","name","type","placeholder","value","onChange","element","target","connect","validateCredentials","push","payload","errorMessage","LoginFormComponent","LoginCardContainer","Image","img","Title","span","LoginCard","src","Logo","alt","LoginForm","ProfileActionsContainer","ActionButton","ProfileActionDetails","ProfileDetailsContainer","NameIDContainer","NameContainer","IDContainer","BioContainer","BioParagraph","StatusContainer","ProfileDetails","profile","requestProfile","useEffect","receiveProfileSuccess","isFetching","state","get","ProfileCardContainer","BackgroundImage","ProfileImage","ProfileCard","ProfileBackgroundImage","NotFoundPage","App","isAuthenticated","path","component","userLogin","Boolean","window","location","hostname","match","combineReducers","action","userProfile","fireErrorAlert","watchFireErrorAlert","call","Swal","fire","icon","title","text","takeEvery","loginErrorAlert","watchLoginErrorAlert","put","axios","method","url","getProfileRequest","watchGetProfileRequest","fetchProfile","takeLatest","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sJAAAA,EAAOC,QAAU,IAA0B,gD,mBCA3CD,EAAOC,QAAU,IAA0B,gD,2lBCQ3C,IAAMC,EAAsBC,IAAOC,IAAV,KAanBC,EAAgBF,IAAOC,IAAV,KAkBJE,EARqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAClC,kBAACL,EAAD,KACE,kBAACG,EAAD,KACGE,K,y9BC7BP,IAAMC,EAAgBL,IAAOM,KAAV,KAcbC,EAAQP,IAAOQ,MAAV,KASLC,EAAQT,IAAOU,MAAV,KAOLC,EAASX,IAAOY,OAAV,KAgEGC,MAAMC,MA/CS,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACvBC,mBAAiB,IADM,mBAC1CC,EAD0C,KACnCC,EADmC,OAEjBF,mBAAiB,IAFA,mBAE1CG,EAF0C,KAEhCC,EAFgC,KAI3CC,EAAUC,cAmBhB,OACE,kBAACjB,EAAD,CAAekB,SANG,SAACC,GACnBA,EAAMC,iBACNV,EAAY,CAAEE,MAAOA,EAAOE,SAAUA,EAAUE,QAASA,MAKvD,kBAACd,EAAD,CAAOmB,QAAQ,SAAf,SACA,kBAACjB,EAAD,CACEkB,KAAK,QACLC,KAAK,OACLC,YAAY,mBACZC,MAAOb,EACPc,SAzBoB,SAACP,GACzBA,EAAMC,iBACN,IAAMO,EAAUR,EAAMS,OACtBf,EAASc,EAAQF,UAyBf,kBAACvB,EAAD,CAAOmB,QAAQ,SAAf,YACA,kBAACjB,EAAD,CACEkB,KAAK,WACLC,KAAK,WACLC,YAAY,sBACZC,MAAOX,EACPY,SA5BuB,SAACP,GAC5BA,EAAMC,iBACN,IAAMO,EAAUR,EAAMS,OACtBb,EAAYY,EAAQF,UA2BlB,kBAACnB,EAAD,CAAQiB,KAAK,UAAb,aCpFSM,cAAQ,KAAM,CAAEnB,YCChB,YAAmE,IAAhEE,EAA+D,EAA/DA,MAAOE,EAAwD,EAAxDA,SAAUE,EAA8C,EAA9CA,QAEjC,OAL0B,SAAC,GAAD,IAAGJ,EAAH,EAAGA,MAAOE,EAAV,EAAUA,SAAV,MAChB,MAAVF,GAA8B,MAAbE,EAIbgB,CADgB,CAAElB,MAAOA,EAAOE,SAAUA,KAE5CE,EAAQe,KAAK,YACN,CACLR,KCd4B,qBDe5BS,QAAS,CACPC,aAAc,SAIlBjB,EAAQe,KAAK,UACN,CACLR,KCrB0B,mBDsB1BS,QAAS,CACPC,aAAc,2BDhBPJ,CAA+BK,G,kdGL9C,IAAMC,EAAqBxC,IAAOC,IAAV,KAQlBwC,EAAQzC,IAAO0C,IAAV,KAMLC,EAAQ3C,IAAO4C,KAAV,KAgBIC,EARG,kBACd,kBAACL,EAAD,KACI,kBAACC,EAAD,CAAOK,IAAKC,IAAMC,IAAI,KACtB,kBAACL,EAAD,cACA,kBAACM,EAAD,Q,gRC5BR,IAAMC,EAA0BlD,IAAOC,IAAV,KAKvBkD,EAAenD,IAAOY,OAAV,KAcHwC,EARc,kBACzB,kBAACF,EAAD,KACI,kBAACC,EAAD,sB,s0BCXR,IAAME,EAA0BrD,IAAOC,IAAV,KAgBvBqD,EAAkBtD,IAAOC,IAAV,KAMfsD,EAAgBvD,IAAO4C,KAAV,KAIbY,GAAcxD,IAAO4C,KAAV,KAIXa,GAAezD,IAAOC,IAAV,KAIZyD,GAAe1D,IAAO4C,KAAV,KAIZe,GAAkB3D,IAAOC,IAAV,KA6BN2D,GAzBQ,SAAC,GAAuC,EAArCC,QAAsC,IAA7BC,EAA4B,EAA5BA,eAKjC,OAJAC,qBAAU,WACRD,MACC,IAGD,kBAACT,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,cAAsB,wBACtB,kBAACC,GAAD,KAAc,YAEhB,kBAACC,GAAD,KACE,kBAACC,GAAD,0UAOF,kBAACC,GAAD,qBAA8B,GAC9B,kBAAC,EAAD,QCpDOK,GAAwB,SACnCH,GADmC,MAEZ,CACvBjC,KCfgC,sBDgBhCS,QAAS,CACP4B,YAAY,EACZJ,QAASA,K,SEDE3B,gBAdS,SAACgC,GAAD,MAAiB,CACvCL,QAASM,eAAID,EAAO,sBAAuB,SAaL,CAAEJ,eFZZ,iBAA0B,CACtDlC,KCPiC,sBDQjCS,QAAS,CACP4B,YAAY,MESD/B,CAA6C0B,I,2bCd5D,IAAMQ,GAAuBpE,IAAOC,IAAV,MAQpBoE,GAAkBrE,IAAO0C,IAAV,MAKf4B,GAAetE,IAAO0C,IAAV,MAoBH6B,GAXK,WAElB,OACE,kBAACH,GAAD,KACE,kBAACC,GAAD,CAAiBvB,IAAK0B,IAAwBxB,IAAK,KACnD,kBAACsB,GAAD,CAAcxB,IAAKC,IAAMC,IAAK,KAC9B,kBAAC,GAAD,QC5BSyB,GAJM,kBACnB,0DCuBaC,GAlBc,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OAC3B,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,KAAK,SACLC,UAAWF,EAAkBF,GAAe5B,IAE9C,kBAAC,IAAD,CACE+B,KAAK,WACLC,UAAWF,EAAkBJ,GAAc1B,IAE7C,kBAAC,IAAD,CAAOgC,UAAWF,EAAkBF,GAAe5B,QCP5CX,gBAVS,SAACgC,GAAD,MAAiB,CACvCS,gBAAiBT,EAAMY,UAAUH,mBASpBzC,CAAyBwC,ICDpBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sBCfSC,8BAAgB,CAAEN,UCAlB,WAA0C,IAAzCZ,EAAwC,uDAAhC,GAAImB,EAA4B,uCACtD,OAAQA,EAAOzD,MACb,IbH8B,qBaI5B,OAAO,gBACFsC,EADL,GAEKmB,EAAOhD,QAFZ,CAGEsC,iBAAiB,IAErB,IbR4B,mBaS1B,OAAO,gBACFT,EADL,GAEKmB,EAAOhD,QAFZ,CAGEsC,iBAAiB,IAErB,QACE,OAAOT,IDf+BoB,YEI7B,WAA4C,IAA3CpB,EAA0C,uDAAlC,GAAImB,EAA8B,uCACxD,OAAQA,EAAOzD,MACb,ITP+B,sBSY/B,ITX8B,sBSgB9B,ITf+B,sBSgB7B,OAAO,gBACFsC,EADL,GAEKmB,EAAOhD,SAEd,QACE,OAAO6B,M,+ECrBIqB,I,aAUAC,IAVV,SAAUD,GAAeF,GAAzB,kEACL,OADK,SACCI,cAAK,kBACTC,KAAKC,KAAK,CACRC,KAAM,QACNC,MAAOR,EAAOhD,QAAQC,aACtBwD,KAAM,6BALL,wCAUA,SAAUN,KAAV,kEACL,OADK,SACCO,aCfwB,mBDeIR,IAD7B,wCETQ,I,aCDES,I,aAIAC,IAJV,SAAUD,GAAgBX,GAA1B,kEACL,OADK,SACCa,aDAyD,CAC7DtE,KDN4B,mBCO5BS,QAAS,CACLC,aCHqB+C,EAAOhD,QAAQC,cAAgB,MADrD,wCAIA,SAAU2D,KAAV,kEACL,OADK,SACCF,alBNwB,mBkBMIC,IAD7B,wC,wBCNQ,qBACbG,KAAM,CACJC,OAAQ,MACRC,IAAK,gE,aCCQC,I,aASAC,IATV,SAAUD,KAAV,wEAEa,OAFb,kBAEmBb,aAAKe,IAFxB,OAGH,OADM3C,EAFH,gBAGGqC,aAAIlC,GAAsBG,eAAIN,EAAS,OAAQ,QAHlD,8BAKH,OALG,mCAKGqC,ahBcgE,CACxEtE,KCtBiC,sBDuBjCS,QAAS,CACP4B,YAAY,EACZJ,QAAS,KACTvB,agBnB8B6B,eAAI,EAAD,GAAQ,UAAW,qBALjD,sDASA,SAAUoC,KAAV,kEACL,OADK,SACCE,afd2B,sBecKH,IADjC,wC,iBCVkBI,IAAV,SAAUA,KAAV,kEACb,OADa,SACPC,aAAI,CACRV,KACAT,KACAe,OAJW,wCCCf,IAAMK,GAAiBC,eAEjBC,GAAQC,uBACZC,GACAC,+BACEC,2BAAgBN,MAIpBA,GAAeO,IAAIT,IAEJI,UCTfM,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,IACf,kBAAC,GAAD,OAEFQ,SAASC,eAAe,SZ+HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.dda3de4a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/not_hack_the_north.e2d8cdc9.png\";","module.exports = __webpack_public_path__ + \"static/media/profile_background.da5ab802.png\";","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface Props {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  children?: any;\n}\n\nconst BackgroundContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #070a1c;\n  width: 100vw;\n  height: 100vh;\n\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nconst CardContainer = styled.div`\n    width: 400px;\n    height: 550px;\n    background: #4d3585;\n    > div {\n      width: 100%;\n      height: 100%;\n    }\n`\n\nconst Background: React.FC<Props> = ({ children }) => (\n  <BackgroundContainer>\n    <CardContainer>\n      {children}\n    </CardContainer>\n  </BackgroundContainer>\n);\n\nexport default Background;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Props } from \"./index\";\nimport { useHistory } from \"react-router-dom\";\n\nconst FormContainer = styled.form`\n  display: flex;\n  flex-flow: column wrap;\n  align-items: center;\n\n  width: 60%;\n\n  label,\n  input {\n    display: block;\n    width: 100%;\n  }\n`;\n\nconst Label = styled.label`\n  line-height: 22px;\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 5px;\n\n  color: white;\n`;\n\nconst Input = styled.input`\n  margin-bottom: 10px;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #777;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  margin-top: 15px;\n  padding: 10px 15px;\n  background-color: rgb(70, 153, 179);\n  color: white;\n  border-radius: 5px;\n  border: 1px solid rgb(70, 153, 179);\n  background-color: 250ms;\n\n  :hover {\n    cursor: pointer;\n    background-color: black;\n    color: rgb(70, 153, 179);\n  }\n`;\n\nconst Form: React.FC<Props> = ({ loginAction }) => {\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  const history = useHistory();\n\n  const handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    const element = event.target as HTMLInputElement;\n    setEmail(element.value);\n  };\n\n  const handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    const element = event.target as HTMLInputElement;\n    setPassword(element.value);\n  };\n\n  const handleLogin = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    loginAction({ email: email, password: password, history: history});\n  };\n\n  return (\n    <FormContainer onSubmit={handleLogin}>\n      <Label htmlFor=\"email\">Email</Label>\n      <Input\n        name=\"email\"\n        type=\"text\"\n        placeholder=\"Enter your email\"\n        value={email}\n        onChange={handleEmailChange}\n      />\n\n      <Label htmlFor=\"email\">Password</Label>\n      <Input\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Enter your password\"\n        value={password}\n        onChange={handlePasswordChange}\n      />\n      <Button type=\"submit\">Login</Button>\n    </FormContainer>\n  );\n};\n\nexport default React.memo(Form);\n","import { connect } from \"react-redux\";\nimport LoginFormComponent from \"./component\";\nimport loginAction from \"../../redux/modules/Login/actions\";\n\ninterface DispatchProps {\n    loginAction: typeof loginAction;\n}\n\nexport type Props = DispatchProps;\n\nexport default connect(null, { loginAction })(LoginFormComponent);\n","import {\n  Credentials,\n  LoginActionType,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_ERROR,\n  ActionParams\n} from \"./types\";\n\nconst validateCredentials = ({ email, password }: Credentials) =>\n  email === \"a\" && password === \"b\";\n\nexport default ({ email, password, history } : ActionParams): LoginActionType => {\n  const credentials = { email: email, password: password }\n  if (validateCredentials(credentials)) {\n    history.push(\"/profile\")\n    return {\n      type: LOGIN_USER_SUCCESS,\n      payload: {\n        errorMessage: null\n      }\n    };\n  } else {\n    history.push(\"/login\");\n    return {\n      type: LOGIN_USER_ERROR,\n      payload: {\n        errorMessage: \"Invalid credentials\"\n      }\n    };\n  }\n};\n","import { History } from \"history\";\n\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\nexport const LOGIN_USER_ERROR = \"LOGIN_USER_ERROR\";\n\nexport interface Credentials {\n  email: string;\n  password: string;\n}\n\nexport interface ActionParams extends Credentials {\n  history: History\n}\n\nexport interface Request {\n    errorMessage: string | null\n}\n\nexport type LoginActionType = {\n  type: typeof LOGIN_USER_SUCCESS | typeof LOGIN_USER_ERROR;\n  payload: Request;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Logo from \"../../static/not_hack_the_north.png\"\nimport LoginForm from \"../LoginForm\";\n\nconst LoginCardContainer = styled.div`\n    display: flex;\n    flex-flow: column wrap;\n    align-items: center;\n\n    padding: 40px 20px;\n`\n\nconst Image = styled.img`\n    border-radius: 50%;\n    width: 150px;\n    height: 150px;\n`\n\nconst Title = styled.span`\n    font-size: 48px;\n    font-weight: 600;\n    margin: 20px 0;\n\n    color: white;\n`\n\nconst LoginCard = () => (\n    <LoginCardContainer>\n        <Image src={Logo} alt=\"\"/>\n        <Title>Login</Title>\n        <LoginForm/>\n    </LoginCardContainer>\n);\n\nexport default LoginCard;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ProfileActionsContainer = styled.div`\n    margin-top: 20px; \n    text-align: center;\n`\n\nconst ActionButton = styled.button`\n    display: inline-block;\n    width: 60%;\n    height: 30px;\n`\n\nconst ProfileActionDetails = () => (\n    <ProfileActionsContainer>\n        <ActionButton>\n            {`Some Action`}\n        </ActionButton>\n    </ProfileActionsContainer>\n);\n\nexport default ProfileActionDetails;","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ProfileActionDetails from \"../ProfileActionDetails\";\nimport { Props } from \"./index\";\n\nconst ProfileDetailsContainer = styled.div`\n  width: 100%;\n  height: 50%;\n  margin-top: 100px;\n  padding: 0 50px;\n\n  display: flex;\n  flex-flow: column wrap;\n\n  div,\n  span {\n    color: white;\n    font-weight: 500;\n  }\n`;\n\nconst NameIDContainer = styled.div`\n  span {\n    font-size: 14px;\n    line-height: 22px;\n  }\n`;\nconst NameContainer = styled.span`\n  float: left;\n`;\n\nconst IDContainer = styled.span`\n  float: right;\n`;\n\nconst BioContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst BioParagraph = styled.span`\n  font-size: 12px;\n`;\n\nconst StatusContainer = styled.div`\n  font-size: 12px;\n`;\n\nconst ProfileDetails = ({ profile, requestProfile }: Props) => {\n  useEffect(() => {\n    requestProfile();\n  }, []);\n\n  return (\n    <ProfileDetailsContainer>\n      <NameIDContainer>\n        <NameContainer>Name: {\"Feridun Hamdullahpur\"}</NameContainer>\n        <IDContainer>{190258281}</IDContainer>\n      </NameIDContainer>\n      <BioContainer>\n        <BioParagraph>\n          {`A veteran of the hackathon scene, Feridun takes them on with a nonchalant\n         approach to building a project. You can find him on reddit posting memes \n         about himself before starting his project hours before the deadline. \n         Yet somehow, he almost always places as a finalist ¯\\\\_(ツ)_/¯`}\n        </BioParagraph>\n      </BioContainer>\n      <StatusContainer>Checked In: {false}</StatusContainer>\n      <ProfileActionDetails />\n    </ProfileDetailsContainer>\n  );\n};\n\nexport default ProfileDetails;\n","import {\n  GET_PROFILE_REQUEST,\n  GET_PROFILE_SUCCESS,\n  GET_PROFILE_FAILURE,\n  EndpointResponse,\n  ProfileActionType\n} from \"./types\";\n\nexport const requestProfile = (): ProfileActionType => ({\n  type: GET_PROFILE_REQUEST,\n  payload: {\n    isFetching: true\n  }\n});\n\nexport const receiveProfileSuccess = (\n  profile: EndpointResponse\n): ProfileActionType => ({\n  type: GET_PROFILE_SUCCESS,\n  payload: {\n    isFetching: false,\n    profile: profile\n  }\n});\n\nexport const receiveProfileError = (error: string): ProfileActionType => ({\n  type: GET_PROFILE_FAILURE,\n  payload: {\n    isFetching: false,\n    profile: null, \n    errorMessage: error\n  }\n});\n","import { HttpError } from \"http-errors\";\n\nexport const GET_PROFILE_REQUEST = 'GET_PROFILE_REQUEST'\nexport const GET_PROFILE_SUCCESS= 'GET_PROFILE_SUCCESS'\nexport const GET_PROFILE_FAILURE = 'GET_PROFILE_FAILURE'\n\nexport type AttendeeType = \"hacker\" | \"organizer\" | \"volunteer\" | \"sponsor\";\n\nexport type Action = \"check_in\" | \"attend_workshop\" | \"call_phone\";\n\nexport interface AttendeeProfile {\n  id: number;\n  name: string;\n  profile_pic: string; // a url to an image\n  bio?: string; // a paragraph describing the attendee\n  type: AttendeeType;\n  checked_in: boolean;\n  actions: Action[];\n  num_workshops_attended?: number; // all \"hacker\" type attendees (and no other types) will have this field\n  sponsor_company?: string; // all \"sponsor\" type attendees (and no other types) will have this field\n  sponsor_company_link?: string; // all \"sponsor\" type attendees (and no other types) will have this field\n  next_shift?: number; // datetime (ms); all \"volunteer\" type attendees (and no other types) will have this field\n  phone_number?: string; // all \"organizer\" type attendees (and no other types) will have this field\n}\n\nexport type EndpointResponse = AttendeeProfile | null;\n\nexport type ProfileActionType = {\n    type: typeof GET_PROFILE_REQUEST | typeof GET_PROFILE_SUCCESS | typeof GET_PROFILE_FAILURE,\n    payload: {\n        isFetching: boolean,\n        profile?: EndpointResponse\n        errorMessage?: string\n    }\n}","import { connect } from \"react-redux\";\nimport ProfileDetails from \"./component\";\nimport { requestProfile } from \"../../redux/modules/Profile/actions\";\nimport { EndpointResponse } from \"../../redux/modules/Profile/types\"\nimport { get } from 'lodash';\n\nconst mapStateToProps = (state: any) => ({\n  profile: get(state, 'userProfile.profile', null)\n});\n\ninterface StateProps {\n  profile?: EndpointResponse\n}\n\ninterface DispatchProps {\n  requestProfile: typeof requestProfile \n}\n\nexport type Props = DispatchProps & StateProps;\n\nexport default connect(mapStateToProps, { requestProfile })(ProfileDetails);\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Logo from \"../../static/not_hack_the_north.png\";\nimport ProfileBackgroundImage from \"../../static/profile_background.png\";\nimport ProfileDetails from \"../ProfileDetails\";\n\nconst ProfileCardContainer = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  align-items: center;\n\n  position: relative;\n`;\n\nconst BackgroundImage = styled.img`\n  width: 100%;\n  height: 30%;\n`;\n\nconst ProfileImage = styled.img`\n  position: absolute;\n  top: 100px;\n\n  border-radius: 50%;\n  width: 125px;\n  height: 125px;\n`;\n\nconst ProfileCard = () => {\n\n  return (\n    <ProfileCardContainer>\n      <BackgroundImage src={ProfileBackgroundImage} alt={\"\"} />\n      <ProfileImage src={Logo} alt={\"\"} />\n      <ProfileDetails />\n    </ProfileCardContainer>\n  );\n};\n\nexport default ProfileCard;\n","import React from \"react\";\n\nconst NotFoundPage = () => (\n  <div>Error 404 Page Not Found</div>\n);\n\nexport default NotFoundPage;\n","import React from \"react\";\nimport Background from \"../Background\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LoginCard from \"../LoginCard\";\nimport ProfileCard from \"../ProfileCard\";\nimport NotFoundPage from \"../NotFoundPage\";\nimport { Props } from \"./index\";\n\nconst App: React.FC<Props> = ({ isAuthenticated }) => (\n  <Background>\n    <Router>\n      <Switch>\n        <Route\n          path=\"/login\"\n          component={isAuthenticated ? NotFoundPage : LoginCard}\n        />\n        <Route\n          path=\"/profile\"\n          component={isAuthenticated ? ProfileCard : LoginCard}\n        />\n        <Route component={isAuthenticated ? NotFoundPage : LoginCard} />\n      </Switch>\n    </Router>\n  </Background>\n);\n\nexport default App;\n","import { connect } from \"react-redux\";\nimport App from \"./component\";\n\nconst mapStateToProps = (state: any) => ({\n  isAuthenticated: state.userLogin.isAuthenticated,\n});\n\ninterface StateProps {\n    isAuthenticated: boolean\n}\n\nexport type Props = StateProps;\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport userLogin from \"../modules/Login/reducers\";\nimport userProfile from \"../modules/Profile/reducers\";\nexport default combineReducers({ userLogin, userProfile });\n","import { LOGIN_USER_SUCCESS, LOGIN_USER_ERROR } from \"./types\";\nimport { LoginActionType } from \"./types\";\n\nexport default (state = {}, action: LoginActionType) => {\n  switch (action.type) {\n    case LOGIN_USER_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true\n      };\n    case LOGIN_USER_ERROR:\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: false\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_PROFILE_REQUEST,\n  GET_PROFILE_SUCCESS,\n  GET_PROFILE_FAILURE,\n  ProfileActionType\n} from \"./types\";\n\nexport default (state = {}, action: ProfileActionType) => {\n  switch (action.type) {\n    case GET_PROFILE_REQUEST:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case GET_PROFILE_SUCCESS:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case GET_PROFILE_FAILURE:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { call, takeEvery } from \"redux-saga/effects\";\nimport { FIRE_ERROR_ALERT, ErrorAlertActionType} from \"./types\";\nimport Swal from \"sweetalert2\";\n\nexport function* fireErrorAlert(action: ErrorAlertActionType) {\n  yield call(() =>\n    Swal.fire({\n      icon: \"error\",\n      title: action.payload.errorMessage,\n      text: \"Something went wrong!\"\n    })\n  );\n}\n\nexport function* watchFireErrorAlert() {\n  yield takeEvery(FIRE_ERROR_ALERT, fireErrorAlert);\n}\n","export const FIRE_ERROR_ALERT = \"FIRE_ERROR_ALERT\";\n\nexport interface Request {\n    errorMessage: string \n}\n\nexport type ErrorAlertActionType = {\n  type: typeof FIRE_ERROR_ALERT\n  payload: Request;\n};","import {\n    FIRE_ERROR_ALERT,\n    ErrorAlertActionType\n  } from \"./types\";\n\nexport default (errorMessage: string) : ErrorAlertActionType => ({\n    type: FIRE_ERROR_ALERT,\n    payload: {\n        errorMessage\n    }\n})","import { put, takeEvery } from \"redux-saga/effects\";\nimport { LOGIN_USER_ERROR, LoginActionType} from \"./types\";\nimport errorAlertAction from '../ErrorAlert/actions'\n\nexport function* loginErrorAlert(action: LoginActionType) {\n  yield put(errorAlertAction(action.payload.errorMessage || ''))\n}\n\nexport function* watchLoginErrorAlert() {\n  yield takeEvery(LOGIN_USER_ERROR, loginErrorAlert);\n}\n","import axios from \"axios\";\n\nexport default () =>\n  axios({\n    method: \"get\",\n    url: \"https://hackthenorth.netlify.com/api/fe-challenge-attendee\"\n  });\n","import { put, takeLatest, call } from \"redux-saga/effects\";\nimport { GET_PROFILE_REQUEST } from \"./types\";\nimport fetchProfile from \"./services\";\nimport { receiveProfileSuccess, receiveProfileError } from \"./actions\";\nimport { get } from \"lodash\";\n\nexport function* getProfileRequest() {\n  try {\n    const profile = yield call(fetchProfile);\n    yield put(receiveProfileSuccess(get(profile, \"data\", null)));\n  } catch (error) {\n    yield put(receiveProfileError(get(error, \"message\", \"Network Error!\")));\n  }\n}\n\nexport function* watchGetProfileRequest() {\n  yield takeLatest(GET_PROFILE_REQUEST, getProfileRequest);\n}\n","import { all } from \"redux-saga/effects\";\nimport { watchFireErrorAlert } from \"../modules/ErrorAlert/sagas\";\nimport { watchLoginErrorAlert } from \"../modules/Login/sagas\";\nimport { watchGetProfileRequest } from \"../modules/Profile/sagas\";\n\nexport default function* rootSaga() {\n  yield all([\n    watchLoginErrorAlert(),\n    watchFireErrorAlert(),\n    watchGetProfileRequest()\n  ]);\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootSaga from '../sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n    \nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware)\n  )\n);\n\nsagaMiddleware.run(rootSaga)\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}