{"version":3,"sources":["static/not_hack_the_north.png","components/Background/index.tsx","components/LoginForm/component.tsx","components/LoginForm/index.ts","redux/modules/Login/actions.ts","redux/modules/Login/types.ts","components/LoginCard/index.tsx","components/ProfileActionDetails/index.tsx","components/ProfileDetails/index.tsx","components/ProfileCard/component.tsx","redux/modules/Profile/actions.ts","redux/modules/Profile/types.ts","components/ProfileCard/index.ts","components/App/component.tsx","components/App/index.ts","serviceWorker.ts","redux/reducers/index.ts","redux/modules/Login/reducers.ts","redux/modules/Profile/reducers.ts","redux/modules/ErrorAlert/sagas.ts","redux/modules/ErrorAlert/types.ts","redux/modules/ErrorAlert/actions.ts","redux/modules/Login/sagas.ts","redux/modules/Profile/services.ts","redux/modules/Profile/sagas.ts","redux/sagas/index.ts","redux/store/localStorage.ts","redux/store/index.ts","index.tsx"],"names":["module","exports","BackgroundContainer","styled","div","CardContainer","Background","children","useLayoutEffect","$logo","$","first","offset","width","height","x","left","y","top","logoCenterCoordinates","$background","ripples","interactive","resolution","dropRadius","perturbance","id","FormContainer","form","Label","label","Input","input","Button","button","React","memo","loginAction","useState","email","setEmail","password","setPassword","history","useHistory","onSubmit","event","preventDefault","htmlFor","name","type","value","onChange","element","target","connect","validateCredentials","payload","errorMessage","LoginFormComponent","LoginCardContainer","Image","img","Title","span","LoginCard","src","Logo","alt","LoginForm","ProfileActionsContainer","ActionButton","ProfileActionDetails","ProfileDetailsContainer","NameContainer","TypeIdContainer","TypeContainer","IDContainer","BioContainer","BioParagraph","p","StatusContainer","ProfileDetails","profile","requestProfile","checked_in","checkedIn","useEffect","toUpperCase","bio","ProfileCardContainer","TopBackground","ProfileImage","ProfileCard","profile_pic","onClick","isFetching","receiveProfileSuccess","state","get","App","isAuthenticated","path","component","userLogin","Boolean","window","location","hostname","match","combineReducers","action","userProfile","fireErrorAlert","watchFireErrorAlert","call","Swal","fire","icon","title","text","takeEvery","loginErrorAlert","watchLoginErrorAlert","put","axios","method","url","getProfileRequest","getProfileFailure","watchGetProfileRequest","watchGetProfileFailure","fetchProfile","data","html","confirmButtonText","preConfirm","store","dispatch","takeLatest","rootSaga","all","sagaMiddleware","createSagaMiddleware","initialState","serializedState","localStorage","getItem","JSON","parse","err","loadState","createStore","rootReducer","composeWithDevTools","applyMiddleware","subscribe","stringify","setItem","saveState","getState","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4ab19d6c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/not_hack_the_north.e2d8cdc9.png\";","import React, { useLayoutEffect } from \"react\";\nimport styled from \"styled-components\";\n\ninterface Props {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  children?: any;\n}\n\nconst BackgroundContainer = styled.div`\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  background: url(\"https://hcti.io/v1/image/90c90c06-1674-485e-917b-2d9ead6d6bcd\");\n\n  min-width: 320px;\n  min-height: 700px;\n\n  * {\n    box-sizing: border-box;\n    font-family: monospace;\n  }\n`;\n\nconst CardContainer = styled.div`\n  position: absolute;\n  transform: translate(-50%, -50%);\n  left: 50%;\n  top: 50%;\n\n  width: 450px;\n  height: 750px;\n  background: #4d3585;\n  background-color: transparent;\n  > div {\n    width: 100%;\n    height: 100%;\n  }\n\n  @media only screen and (max-width: 450px) {\n    width: 100vw; \n    height: 100vh;\n  }\n`;\n\nconst Background: React.FC<Props> = ({ children }) => {\n  const logoCenterCoordinates = () => {\n    // Warning: Conversion cancer! I got lazy! :P\n    const $logo = $(\"#logo\").first();\n    const offset = $logo.offset() as any;\n    const width = $logo.width() as number;\n    const height = $logo.height() as number;\n\n    const leftOffset = offset.left as number;\n    const topOffset = offset.top as number;\n    return {\n      x: leftOffset + width / 2,\n      y: topOffset + height / 2\n    };\n  };\n  useLayoutEffect(() => {\n    const { x, y } = logoCenterCoordinates();\n    const $background = $(\"#main\") as any;\n    $background.ripples({\n      interactive: false,\n      resolution: 400,\n      dropRadius: 40,\n      perturbance: 0.15\n    });\n    $background.ripples(\"drop\", x, y, 40, 0.15);\n  }, []);\n\n  return (\n    <BackgroundContainer id=\"main\">\n      <CardContainer>{children}</CardContainer>\n    </BackgroundContainer>\n  );\n};\n\nexport default Background;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Props } from \"./index\";\nimport { useHistory } from \"react-router-dom\";\n\nconst FormContainer = styled.form`\n  display: flex;\n  flex-flow: column wrap;\n  align-items: center;\n\n  width: 60%;\n  margin-bottom: auto;\n\n  label,\n  input {\n    display: block;\n    width: 100%;\n  }\n`;\n\nconst Label = styled.label`\n  line-height: 22px;\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 5px;\n\n  color: white;\n  font-weight: 700;\n  letter-spacing: 0.05em;\n`;\n\nconst Input = styled.input`\n  margin-bottom: 10px;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #20293c;\n  background-color: #20293c;\n  color: #8a9eb2;\n  outline: none;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  margin-top: 15px;\n  padding: 10px 15px;\n  background-color: rgb(70, 153, 179);\n  color: white;\n  border-radius: 5px;\n  border: 1px solid rgb(70, 153, 179);\n\n  font-size: 16px;\n  font-weight: 700;\n  letter-spacing: 0.05em;\n\n  :hover {\n    cursor: pointer;\n    background-color: black;\n    color: rgb(70, 153, 179);\n  }\n`;\n\nconst Form: React.FC<Props> = ({ loginAction }) => {\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  const history = useHistory();\n\n  const handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    const element = event.target as HTMLInputElement;\n    setEmail(element.value);\n  };\n\n  const handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    const element = event.target as HTMLInputElement;\n    setPassword(element.value);\n  };\n\n  const handleLogin = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    loginAction({ email: email, password: password, history: history});\n  };\n\n  return (\n    <FormContainer onSubmit={handleLogin}>\n      <Label htmlFor=\"email\">Email</Label>\n      <Input\n        name=\"email\"\n        type=\"text\"\n        value={email}\n        onChange={handleEmailChange}\n      />\n\n      <Label htmlFor=\"email\">Password</Label>\n      <Input\n        name=\"password\"\n        type=\"password\"\n        value={password}\n        onChange={handlePasswordChange}\n      />\n      <Button type=\"submit\">LOGIN</Button>\n    </FormContainer>\n  );\n};\n\nexport default React.memo(Form);\n","import { connect } from \"react-redux\";\nimport LoginFormComponent from \"./component\";\nimport loginAction from \"../../redux/modules/Login/actions\";\n\ninterface DispatchProps {\n    loginAction: typeof loginAction;\n}\n\nexport type Props = DispatchProps;\n\nexport default connect(null, { loginAction })(LoginFormComponent);\n","import {\n  Credentials,\n  LoginActionType,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_ERROR,\n  ActionParams\n} from \"./types\";\n\nconst validateCredentials = ({ email, password }: Credentials) =>\n  email === \"a\" && password === \"b\";\n\nexport default ({ email, password, history } : ActionParams): LoginActionType => {\n  const credentials = { email: email, password: password }\n  if (validateCredentials(credentials)) {\n    // history.push(\"/profile\")\n    return {\n      type: LOGIN_USER_SUCCESS,\n      payload: {\n        errorMessage: null\n      }\n    };\n  } else {\n    // history.push(\"/login\");\n    return {\n      type: LOGIN_USER_ERROR,\n      payload: {\n        errorMessage: \"Invalid credentials\"\n      }\n    };\n  }\n};\n","import { History } from \"history\";\n\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\nexport const LOGIN_USER_ERROR = \"LOGIN_USER_ERROR\";\n\nexport interface Credentials {\n  email: string;\n  password: string;\n}\n\nexport interface ActionParams extends Credentials {\n  history: History\n}\n\nexport interface Request {\n    errorMessage: string | null\n}\n\nexport type LoginActionType = {\n  type: typeof LOGIN_USER_SUCCESS | typeof LOGIN_USER_ERROR;\n  payload: Request;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Logo from \"../../static/not_hack_the_north.png\"\nimport LoginForm from \"../LoginForm\";\n\nconst LoginCardContainer = styled.div`\n    display: flex;\n    flex-flow: column wrap;\n    align-items: center;\n\n    padding: 40px 20px;\n`\n\nconst Image = styled.img`\n    border-radius: 50%;\n    width: 150px;\n    height: 150px;\n    pointer-events: none;\n    opacity: 0.9;\n\n    margin-top: auto;\n`\n\nconst Title = styled.span`\n    font-size: 48px;\n    font-weight: 600;\n    margin: 20px 0;\n\n    color: white;\n`\n\nconst LoginCard = () => (\n    <LoginCardContainer>\n        <Image src={Logo} alt=\"\" id=\"logo\"/>\n        <Title>Login</Title>\n        <LoginForm/>\n    </LoginCardContainer>\n);\n\nexport default LoginCard;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ProfileActionsContainer = styled.div`\n    margin-top: 20px; \n    text-align: center;\n`\n\nconst ActionButton = styled.button`\n    display: inline-block;\n    width: 60%;\n    height: 30px;\n`\n\nconst ProfileActionDetails = () => (\n    <ProfileActionsContainer>\n        <ActionButton>\n            {`Some Action`}\n        </ActionButton>\n    </ProfileActionsContainer>\n);\n\nexport default ProfileActionDetails;","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport ProfileActionDetails from \"../ProfileActionDetails\";\nimport { Props } from \"../ProfileCard\";\n\nconst ProfileDetailsContainer = styled.div`\n  width: 100%;\n  height: 50%;\n  margin-top: 130px;\n  padding: 0 50px;\n\n  display: flex;\n  flex-flow: column wrap;\n\n  div,\n  span {\n    font-weight: 500;\n  }\n`;\n\nconst NameContainer = styled.span`\n  float: left;\n  font-size: 36px;\n  color: #1bd6bd;\n  line-height: 36px;\n`;\n\nconst TypeIdContainer = styled.div`\n  margin-top: 8px;\n  span {\n    color: white;\n    font-size: 16px;\n    line-height: 22px;\n    font-weight: 600;\n    opacity: 0.7;\n  }\n`;\n\nconst TypeContainer = styled.span`\n  float: left;\n  letter-spacing: 1.5px;\n`;\n\nconst IDContainer = styled.span`\n  float: right;\n`;\n\nconst BioContainer = styled.div`\n  margin: 20px 0;\n  max-height: 150px;\n  overflow: scroll;\n`;\n\nconst BioParagraph = styled.p`\n  color: #8a9eb2;\n  font-size: 14px;\n  letter-spacing: 0.16px;\n  line-height: 24px;\n  height: 100%;\n  margin: 0;\n`;\n\nconst StatusContainer = styled.div`\n  font-size: 12px;\n  color: white;\n`;\n\nconst ProfileDetails = ({ profile, requestProfile }: Props) => {\n  const [checkedIn, setCheckIn] = useState<boolean>((profile && profile.checked_in) || false);\n\n  useEffect(() => {\n    requestProfile();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <ProfileDetailsContainer>\n      <NameContainer>{profile && profile.name}</NameContainer>\n      <TypeIdContainer>\n        <TypeContainer>{profile && profile.type.toUpperCase()}</TypeContainer>\n        <IDContainer>{profile && profile.id}</IDContainer>\n      </TypeIdContainer>\n      <BioContainer>\n        <BioParagraph>{profile && profile.bio}</BioParagraph>\n      </BioContainer>\n      <StatusContainer>\n        Checked In: {`${checkedIn}`}\n      </StatusContainer>\n      <ProfileActionDetails />\n    </ProfileDetailsContainer>\n  );\n};\n\nexport default ProfileDetails;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ProfileDetails from \"../ProfileDetails\";\nimport Logo from \"../../static/not_hack_the_north.png\";\nimport { Props } from \"./index\";\n\nconst ProfileCardContainer = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  align-items: center;\n\n  position: relative;\n  background-color: #070a1c;\n  border-radius: 10px;\n\n  opacity: 0.95;\n`;\n\nconst TopBackground = styled.div`\n  width: 100%;\n  height: 25%;\n  background-color: #070a1c;\n  border-bottom: 1px solid #1bd6bd;\n  border-opacity: 0.5;\n`;\n\nconst ProfileImage = styled.img`\n  position: absolute;\n  top: 90px;\n  cursor: pointer;\n\n  border-radius: 50%;\n  width: 200px;\n  height: 200px;\n  &:hover {\n    box-shadow: 0px 4px 8px #1bd6bd;\n    width: 202px;\n    height: 202px;\n  }\n`;\n\nconst ProfileCard = ({ profile, requestProfile }: Props) => {\n  return (\n    <ProfileCardContainer>\n      <TopBackground />\n      <ProfileImage\n        src={profile ? profile.profile_pic : Logo}\n        alt={\"\"}\n        id={\"logo\"}\n        onClick={() => requestProfile()}\n      />\n      <ProfileDetails profile={profile} requestProfile={requestProfile} />\n    </ProfileCardContainer>\n  );\n};\n\nexport default ProfileCard;\n","import {\n  GET_PROFILE_REQUEST,\n  GET_PROFILE_SUCCESS,\n  GET_PROFILE_FAILURE,\n  GET_PROFILE_ERROR,\n  EndpointResponse,\n  ProfileActionType\n} from \"./types\";\n\nexport const requestProfile = (): ProfileActionType => ({\n  type: GET_PROFILE_REQUEST,\n  payload: {\n    isFetching: true\n  }\n});\n\nexport const receiveProfileSuccess = (\n  profile: EndpointResponse\n): ProfileActionType => ({\n  type: GET_PROFILE_SUCCESS,\n  payload: {\n    isFetching: false,\n    profile: profile,\n    errorMessage: null\n  }\n});\n\nexport const receiveProfileFailure = () : ProfileActionType => ({\n  type: GET_PROFILE_FAILURE,\n  payload: {\n    isFetching: false,\n    profile: null,\n    errorMessage: null\n  }\n})\n\nexport const receiveProfileError = (error: string): ProfileActionType => ({\n  type: GET_PROFILE_ERROR,\n  payload: {\n    isFetching: false,\n    profile: null, \n    errorMessage: error\n  }\n});\n","export const GET_PROFILE_REQUEST = \"GET_PROFILE_REQUEST\";\nexport const GET_PROFILE_SUCCESS = \"GET_PROFILE_SUCCESS\";\nexport const GET_PROFILE_FAILURE = \"GET_PROFILE_FAILURE\";\nexport const GET_PROFILE_ERROR = \"GET_PROFILE_ERROR\";\n\nexport type AttendeeType = \"hacker\" | \"organizer\" | \"volunteer\" | \"sponsor\";\n\nexport type Action = \"check_in\" | \"attend_workshop\" | \"call_phone\";\n\nexport interface AttendeeProfile {\n  id: number;\n  name: string;\n  profile_pic: string; // a url to an image\n  bio?: string; // a paragraph describing the attendee\n  type: AttendeeType;\n  checked_in: boolean;\n  actions: Action[];\n  num_workshops_attended?: number; // all \"hacker\" type attendees (and no other types) will have this field\n  sponsor_company?: string; // all \"sponsor\" type attendees (and no other types) will have this field\n  sponsor_company_link?: string; // all \"sponsor\" type attendees (and no other types) will have this field\n  next_shift?: number; // datetime (ms); all \"volunteer\" type attendees (and no other types) will have this field\n  phone_number?: string; // all \"organizer\" type attendees (and no other types) will have this field\n}\n\nexport type EndpointResponse = AttendeeProfile | null;\n\nexport type ProfileActionType = {\n  type:\n    | typeof GET_PROFILE_REQUEST\n    | typeof GET_PROFILE_SUCCESS\n    | typeof GET_PROFILE_FAILURE\n    | typeof GET_PROFILE_ERROR;\n  payload: {\n    isFetching: boolean;\n    profile?: EndpointResponse;\n    errorMessage?: string | null;\n  };\n};\n","import { connect } from \"react-redux\";\nimport ProfileCard from \"./component\";\nimport { requestProfile } from \"../../redux/modules/Profile/actions\";\nimport { EndpointResponse } from \"../../redux/modules/Profile/types\"\nimport { get } from 'lodash';\n\nconst mapStateToProps = (state: any) => ({\n  profile: get(state, 'userProfile.profile', null)\n});\n\nexport interface StateProps {\n  profile?: EndpointResponse\n}\n\nexport interface DispatchProps {\n  requestProfile: typeof requestProfile \n}\n\nexport type Props = DispatchProps & StateProps;\n\nexport default connect(mapStateToProps, { requestProfile })(ProfileCard);\n","import React from \"react\";\nimport Background from \"../Background\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LoginCard from \"../LoginCard\";\nimport ProfileCard from \"../ProfileCard\";\nimport { Props } from \"./index\";\n\nconst App: React.FC<Props> = ({ isAuthenticated }) => (\n  <Background>\n    <Router>\n      <Switch>\n        <Route\n          path=\"/login\"\n          component={isAuthenticated ? ProfileCard : LoginCard}\n        />\n        <Route\n          path=\"/profile\"\n          component={isAuthenticated ? ProfileCard : LoginCard}\n        />\n        <Route component={isAuthenticated ? ProfileCard : LoginCard} />\n      </Switch>\n    </Router>\n  </Background>\n);\n\nexport default App;\n","import { connect } from \"react-redux\";\nimport App from \"./component\";\n\nconst mapStateToProps = (state: any) => ({\n  isAuthenticated: state.userLogin.isAuthenticated,\n});\n\ninterface StateProps {\n    isAuthenticated: boolean\n}\n\nexport type Props = StateProps;\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport userLogin from \"../modules/Login/reducers\";\nimport userProfile from \"../modules/Profile/reducers\";\nexport default combineReducers({ userLogin, userProfile });\n","import { LOGIN_USER_SUCCESS, LOGIN_USER_ERROR } from \"./types\";\nimport { LoginActionType } from \"./types\";\n\nexport default (state = {}, action: LoginActionType) => {\n  switch (action.type) {\n    case LOGIN_USER_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true\n      };\n    case LOGIN_USER_ERROR:\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: false\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_PROFILE_REQUEST,\n  GET_PROFILE_SUCCESS,\n  GET_PROFILE_FAILURE,\n  ProfileActionType\n} from \"./types\";\n\nexport default (state = {}, action: ProfileActionType) => {\n  switch (action.type) {\n    case GET_PROFILE_REQUEST:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case GET_PROFILE_SUCCESS:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case GET_PROFILE_FAILURE:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { call, takeEvery } from \"redux-saga/effects\";\nimport { FIRE_ERROR_ALERT, ErrorAlertActionType} from \"./types\";\nimport Swal from \"sweetalert2\";\n\nexport function* fireErrorAlert(action: ErrorAlertActionType) {\n  yield call(() =>\n    Swal.fire({\n      icon: \"error\",\n      title: action.payload.errorMessage,\n      text: \"Something went wrong!\"\n    })\n  );\n}\n\nexport function* watchFireErrorAlert() {\n  yield takeEvery(FIRE_ERROR_ALERT, fireErrorAlert);\n}\n","export const FIRE_ERROR_ALERT = \"FIRE_ERROR_ALERT\";\n\nexport interface Request {\n    errorMessage: string \n}\n\nexport type ErrorAlertActionType = {\n  type: typeof FIRE_ERROR_ALERT\n  payload: Request;\n};","import {\n    FIRE_ERROR_ALERT,\n    ErrorAlertActionType\n  } from \"./types\";\n\nexport default (errorMessage: string) : ErrorAlertActionType => ({\n    type: FIRE_ERROR_ALERT,\n    payload: {\n        errorMessage\n    }\n})","import { put, takeEvery } from \"redux-saga/effects\";\nimport { LOGIN_USER_ERROR, LoginActionType} from \"./types\";\nimport errorAlertAction from '../ErrorAlert/actions'\n\nexport function* loginErrorAlert(action: LoginActionType) {\n  yield put(errorAlertAction(action.payload.errorMessage || ''))\n}\n\nexport function* watchLoginErrorAlert() {\n  yield takeEvery(LOGIN_USER_ERROR, loginErrorAlert);\n}\n","import axios from \"axios\";\n\nexport default () =>\n  axios({\n    method: \"get\",\n    url: \"https://hackthenorth.netlify.com/api/fe-challenge-attendee\"\n  });\n","import { put, takeLatest, call } from \"redux-saga/effects\";\nimport { GET_PROFILE_REQUEST, GET_PROFILE_FAILURE } from \"./types\";\nimport fetchProfile from \"./services\";\nimport { requestProfile } from \"./actions\";\nimport {\n  receiveProfileSuccess,\n  receiveProfileError,\n  receiveProfileFailure\n} from \"./actions\";\nimport { get } from \"lodash\";\nimport Swal from \"sweetalert2\";\nimport store from \"../../store\";\n\nexport function* getProfileRequest() {\n  try {\n    const profile = yield call(fetchProfile);\n    const data = get(profile, \"data\", null);\n    if (data) {\n      yield put(receiveProfileSuccess(data));\n    } else {\n      yield put(receiveProfileFailure());\n    }\n    // yield put(receiveProfileFailure());\n  } catch (error) {\n    yield put(receiveProfileError(get(error, \"message\", \"Network Error!\")));\n  }\n}\n\nexport function* getProfileFailure() {\n  yield call(() =>\n    Swal.fire({\n      icon: \"error\",\n      title: \"Oops...\",\n      html:\n        \"<span>We asked for a profile...but they ghosted us! &#128542</span>\",\n      confirmButtonText: \"Try Again!\",\n      preConfirm: () => {\n        store.dispatch(requestProfile());\n      }\n    })\n  );\n}\n\nexport function* watchGetProfileRequest() {\n  yield takeLatest(GET_PROFILE_REQUEST, getProfileRequest);\n}\n\nexport function* watchGetProfileFailure() {\n  yield takeLatest(GET_PROFILE_FAILURE, getProfileFailure);\n}\n","import { all } from \"redux-saga/effects\";\nimport { watchFireErrorAlert } from \"../modules/ErrorAlert/sagas\";\nimport { watchLoginErrorAlert } from \"../modules/Login/sagas\";\nimport { watchGetProfileRequest, watchGetProfileFailure } from \"../modules/Profile/sagas\";\n\nexport default function* rootSaga() {\n  yield all([\n    watchLoginErrorAlert(),\n    watchFireErrorAlert(),\n    watchGetProfileRequest(),\n    watchGetProfileFailure()\n  ]);\n}\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return {};\n  }\n};\n\nexport const saveState = (state: any) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootSaga from '../sagas';\nimport { loadState, saveState } from \"./localStorage\"\n\nconst sagaMiddleware = createSagaMiddleware();\nconst initialState = loadState();\n\nconst store = createStore(\n  rootReducer, initialState,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware)\n  )\n);\n\nstore.subscribe(() => {\n  saveState(store.getState());\n}); \n\nsagaMiddleware.run(rootSaga)\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}